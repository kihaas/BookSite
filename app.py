# app.py
import uvicorn
from fastapi import FastAPI
from routing.book import router as books_routing
from database.session import init_db
from fastapi.middleware.cors import CORSMiddleware

# üëâ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏, —á—Ç–æ–±—ã SQLAlchemy –∏—Ö –∑–Ω–∞–ª –¥–æ create_all()
from models import author, book

app = FastAPI(openapi_url="/core/openapi.json", docs_url="/core/docs")

# –°–æ–∑–¥–∞—ë–º —Ça–±–ª–∏—Ü—ã –≤ –±a–∑–µ—É—É—É—É—É—É
init_db()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç—ã—ã—ã—ã—ã—ã—ã
app.include_router(books_routing)

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å "*"
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/")
def root():
    return {"message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–∫—Ä–æ–π—Ç–µ /core/docs —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å API"}


if __name__ == "__main__":
    uvicorn.run("app:app",reload=True)